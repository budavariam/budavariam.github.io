<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on Mátyás Budavári</title>
    <link>https://budavariam.github.io/tags/python/</link>
    <description>Recent content in python on Mátyás Budavári</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 04 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://budavariam.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Quickly test mail sending through SMTP</title>
      <link>https://budavariam.github.io/posts/2021/08/04/quickly-test-mail-sending-through-smtp/</link>
      <pubDate>Wed, 04 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://budavariam.github.io/posts/2021/08/04/quickly-test-mail-sending-through-smtp/</guid>
      <description>&lt;p&gt;In the past few days I&amp;rsquo;ve been working with a code where I needed to see whether the service successfully sends mails through SMTP.
I did not want to use or set up an actual mail server locally.
As is turns out Python has a oneliner to solve this situation.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Plotly Dash Development Tips</title>
      <link>https://budavariam.github.io/posts/2021/04/05/plotly-dash-development-tips/</link>
      <pubDate>Mon, 05 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://budavariam.github.io/posts/2021/04/05/plotly-dash-development-tips/</guid>
      <description>&lt;p&gt;Last year I was working on some dash-plotly applications/dashboards.
It was confusing at first, I learned a lot during that time, I&amp;rsquo;d like to share my gathered experience.
The docs already contain useful information, I do not wish to repeat them.
There are many example pages in github, my goal is to collect my most visited pages here,
so it&amp;rsquo;ll be easier to start out with development.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Node/Python Version Management</title>
      <link>https://budavariam.github.io/posts/2021/01/11/node/python-version-management/</link>
      <pubDate>Mon, 11 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://budavariam.github.io/posts/2021/01/11/node/python-version-management/</guid>
      <description>&lt;p&gt;I work with some projects that can be only used with specific versions of node/python and it&amp;rsquo;s not feasible to simply dockerize them.
Every time I switch between these projects I&amp;rsquo;d need to reinstall different versions of node/python.
That would be plain silly&amp;hellip; BUT there&amp;rsquo;s a better way.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Postgres External Python Call</title>
      <link>https://budavariam.github.io/posts/2021/01/05/postgres-external-python-call/</link>
      <pubDate>Tue, 05 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://budavariam.github.io/posts/2021/01/05/postgres-external-python-call/</guid>
      <description>&lt;p&gt;After &lt;a href=&#34;https://budavariam.github.io/posts/2020/12/30/external-function-from-snowflake/&#34;&gt;experiencing the awesomeness&lt;/a&gt;
of External Calls in Snowflake
I decided to look into the possibilities of running external snippets from Postgres.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Project Template With Cookiecutter</title>
      <link>https://budavariam.github.io/posts/2020/12/13/project-template-with-cookiecutter/</link>
      <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://budavariam.github.io/posts/2020/12/13/project-template-with-cookiecutter/</guid>
      <description>&lt;p&gt;Sometimes I work on similar projects that need so little customization
I feel like I can just copy and paste it, and tweak some variables,
then create a new repo for it, and start to generate the content.
Here is where project templates come into play.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
